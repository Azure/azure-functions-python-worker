jobs:
  - job: "TestPython"
    displayName: "Run Python E2E Tests"

    pool:
      name: 1es-pool-azfunc
      image: 1es-ubuntu-22.04
      os: linux

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: $(PYTHON_VERSION)
      - task: UseDotNet@2
        displayName: 'Install .NET 8'
        inputs:
          version: 8.0.x
      - bash: |
          python -m pip install --upgrade pip
          python -m pip install -U azure-functions --pre
          python -m pip install -U -e .[dev]

          if [[ $(PYTHON_VERSION) != "3.7" ]]; then
             python -m pip install --pre -U -e .[test-http-v2]
          fi
          if [[ $(PYTHON_VERSION) != "3.7" && $(PYTHON_VERSION) != "3.8" ]]; then
              python -m pip install --pre -U -e .[test-deferred-bindings]
          fi

          cd tests
          python -m invoke -c test_setup build-protos
          python -m invoke -c test_setup webhost --branch-name=dev
          python -m invoke -c test_setup extensions
        displayName: 'Install dependencies and the worker'
        condition: and(ne(variables['Build.SourceBranch'], 'refs/heads/sdk/*'), ne(variables['Build.SourceBranch'], 'refs/heads/extensions/*'))
      - task: DownloadPipelineArtifact@2
        displayName: 'Download Python SDK Artifact'
        inputs:
          buildType: specific
          artifactName: 'azure-functions'
          project: 'internal'
          definition: 679
          buildVersionToDownload: latest
          targetPath: '$(Pipeline.Workspace)/PythonSdkArtifact'
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/sdk/*')
      - bash: |
          python -m pip install --upgrade pip
          python -m pip install -e $(Pipeline.Workspace)/PythonSdkArtifact
          python -m pip install -U -e .[dev]

          if [[ $(PYTHON_VERSION) != "3.7" ]]; then
             python -m pip install --pre -U -e .[test-http-v2]
          fi
          if [[ $(PYTHON_VERSION) != "3.7" && $(PYTHON_VERSION) != "3.8" ]]; then
              python -m pip install --pre -U -e .[test-deferred-bindings]
          fi

          cd tests
          python -m invoke -c test_setup build-protos
          python -m invoke -c test_setup webhost --branch-name=dev
          python -m invoke -c test_setup extensions
        displayName: 'Install test python sdk, dependencies and the worker'
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/sdk/*')
      - task: DownloadPipelineArtifact@2
        displayName: 'Download Python Extension Artifact'
        inputs:
          buildType: specific
          artifactName: $(PYTHONEXTENSIONNAME)
          project: 'internal'
          definition: 798
          buildVersionToDownload: latest
          targetPath: '$(Pipeline.Workspace)/PythonExtensionArtifact'
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/extensions/*')
      - bash: |
          python -m pip install --upgrade pip

          if [[ $(PYTHON_VERSION) != "3.7" ]]; then
             python -m pip install -e $(Pipeline.Workspace)/PythonExtensionArtifact
             python -m pip install --pre -U -e .[test-http-v2]
          fi
          if [[ $(PYTHON_VERSION) != "3.7" && $(PYTHON_VERSION) != "3.8" ]]; then
              python -m pip install -e $(Pipeline.Workspace)/PythonExtensionArtifact
              python -m pip install --pre -U -e .[test-deferred-bindings]
          fi
          
          python -m pip install -U -e .[dev]

          cd tests
          python -m invoke -c test_setup build-protos
          python -m invoke -c test_setup webhost --branch-name=dev
          python -m invoke -c test_setup extensions
        displayName: 'Install test python extension, dependencies and the worker'
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/extensions/*')
      - bash: |
             python -m pytest -q -n auto --dist loadfile --reruns 4 --cov=./azure_functions_worker --cov-report xml --cov-branch --cov-append tests/endtoend tests/extension_tests/deferred_bindings_tests tests/extension_tests/http_v2_tests
        env:
          AzureWebJobsStorage: $(STORAGE_CONNECTION)
          AzureWebJobsCosmosDBConnectionString: $(COSMOSDB_CONNECTION)
          AzureWebJobsEventHubConnectionString: $(EVENTHUB_CONNECTION)
          AzureWebJobsServiceBusConnectionString: $(SERVICEBUS_CONNECTION)
          AzureWebJobsSqlConnectionString: $(SQL_CONNECTION)
          AzureWebJobsEventGridTopicUri: $(EVENTGRID_URI)
          AzureWebJobsEventGridConnectionKey: $(EVENTGRID_CONNECTION)
          USETESTPYTHONSDK: $(USETESTPYTHONSDK)
        displayName: "Running $(PYTHON_VERSION) Python E2E Tests"
