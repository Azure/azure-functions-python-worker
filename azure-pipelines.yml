name: 1.0.$(Date:yyyyMMdd)$(Rev:r)

trigger:
- dev
- master

variables:
    DOTNET_VERSION: '2.2.402'

jobs:
- job: Tests
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    matrix:
      Python36:
        pythonVersion: '3.6'
      Python37:
        pythonVersion: '3.7'
    maxParallel: 1
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(pythonVersion)'
      addToPath: true
  - task: ShellScript@2
    inputs:
      disableAutoCwd: true # Execute in current directory
      scriptPath: .ci/linux_devops_tools.sh
    displayName: 'Install Core Tools'
  - task: DotNetCoreInstaller@0
    inputs:
      packageType: 'sdk'
      version: $(DOTNET_VERSION)
    displayName: 'Install dotnet'
  - task: ShellScript@2
    inputs:
      disableAutoCwd: true
      scriptPath: .ci/linux_devops_build.sh
    displayName: 'Build'
  - bash: |
        chmod +x .ci/linux_devops_unit_tests.sh
        .ci/linux_devops_unit_tests.sh
    displayName: 'Unit Tests'
  - bash: |
        chmod +x .ci/linux_devops_e2e_tests.sh
        .ci/linux_devops_e2e_tests.sh
    env:
      LINUXSTORAGECONNECTIONSTRING: $(LinuxStorageConnectionString)
      LINUXCOSMOSDBCONNECTIONSTRING: $(LinuxCosmosDBConnectionString)
      LINUXEVENTHUBCONNECTIONSTRING: $(LinuxEventHubConnectionString)
      LINUXSERVICEBUSCONNECTIONSTRING: $(LinuxServiceBusConnectionString)
    displayName: 'E2E Tests'

- job: Build_WINDOWS_X64
  dependsOn: 'Tests'
  pool: 
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Python36:
        pythonVersion: '3.6'
      Python37:
        pythonVersion: '3.7'
  steps:
  - template: pack/templates/win_env_gen.yml
    parameters:
      pythonVersion: '$(pythonVersion)'
      architecture: 'x64'
      artifactName: '$(pythonVersion)_WINDOWS_X64'
- job: Build_WINDOWS_X86
  dependsOn: 'Tests'
  pool: 
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Python37:
        pythonVersion: '3.7'
  steps:
  - template: pack/templates/win_env_gen.yml
    parameters:
      pythonVersion: '$(pythonVersion)'
      architecture: 'x86'
      artifactName: '$(pythonVersion)_WINDOWS_x86'
- job: Build_LINUX_X64
  dependsOn: 'Tests'
  pool: 
    vmImage: 'ubuntu-16.04'
  strategy:
    matrix:
      Python36:
        pythonVersion: '3.6'
      Python37:
        pythonVersion: '3.7'
  steps:
  - template: pack/templates/nix_env_gen.yml
    parameters:
      pythonVersion: '$(pythonVersion)'
      artifactName: '$(pythonVersion)_LINUX_X64'
- job: Build_OSX_X64
  dependsOn: 'Tests'
  pool: 
    vmImage: 'macOS-10.13'
  strategy:
    matrix:
      Python36:
        pythonVersion: '3.6'
      Python37:
        pythonVersion: '3.7'
  steps:
  - template: pack/templates/nix_env_gen.yml
    parameters:
      pythonVersion: '$(pythonVersion)'
      artifactName: '$(pythonVersion)_OSX_X64'

- job: PackageWorkers
  dependsOn: ['Build_WINDOWS_X64',
              'Build_WINDOWS_X86',
              'Build_LINUX_X64',
              'Build_OSX_X64'
             ]
  pool:
      vmImage: 'vs2017-win2016'
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'specific'
      downloadPath: '$(Build.SourcesDirectory)'
  - task: NuGetCommand@2
    inputs:
      command: pack
      packagesToPack: 'pack\Microsoft.Azure.Functions.PythonWorker.nuspec'
      versioningScheme: 'byEnvVar'
      versionEnvVar: BUILD_BUILDNUMBER # Replaces version in nuspec
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'PythonWorker'
      
