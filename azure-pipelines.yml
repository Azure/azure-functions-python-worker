trigger:
- dev
- master

variables:
    DOTNET_VERSION: '2.1.402'

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 1
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      addToPath: true 
  - task: ShellScript@2
    inputs:
      disableAutoCwd: true # Execute in current directory
      scriptPath: .ci/linux_devops_tools.sh
    displayName: 'Install Core Tools'
  - task: DotNetCoreInstaller@0
    inputs:
      packageType: 'sdk' 
      version: $(DOTNET_VERSION)
    displayName: 'Install dotnet' 
  - task: ShellScript@2
    inputs:
      disableAutoCwd: true 
      scriptPath: .ci/linux_devops_build.sh
    displayName: 'Build'
  - bash: |
        chmod +x .ci/linux_devops_tests.sh
        .ci/linux_devops_tests.sh
    env:
      LINUXSTORAGECONNECTIONSTRING: $(LinuxStorageConnectionString)
      LINUXCOSMOSDBCONNECTIONSTRING: $(LinuxCosmosDBConnectionString)
      LINUXEVENTHUBCONNECTIONSTRING: $(LinuxEventHubConnectionString)
      LINUXSERVICEBUSCONNECTIONSTRING: $(LinuxServiceBusConnectionString)
    displayName: 'Test'
  
- job: Nuget
  pool:
      vmImage: 'vs2017-win2016'
  steps:
  - task: NuGetCommand@2
    inputs:
      command: pack
      packagesToPack: 'pack\worker.nuspec'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
      artifactName: 'Microsoft.Azure.Functions.PythonWorker'