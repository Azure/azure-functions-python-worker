# This workflow will install Python dependencies and run end to end tests with single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI Worker Build

on:
  workflow_dispatch:
  push:
    branches: [ dev, master, main, release/* ]
  pull_request:
    branches: [ dev, master, main, release/* ]

jobs:
  # Build Python Worker into the worker directory
  build-python-worker:
    name: "Build Python Worker"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ 'ubuntu-18.04', 'windows-2019', 'macos-10.15' ]
        python-version: [ '3.6', '3.7', '3.8', '3.9' ]
        python-architecture: [ 'x64' ]
        dotnet-version: [ '2.2.207' ]
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.python-architecture }}
    - name: Setup DotNet ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Install dependencies and the worker
      run: |
        set -x
        python -m venv .env
        source .env/bin/activate
        python -m pip install .
        python -m pip install . azure-functions --no-compile --target "./deps"
      shell: bash
    - name: Derive artifact folder for ${{ matrix.python-version }}_${{ matrix.os }}_${{ matrix.python-architecture }}
      run: |
        set -e -x
        echo "Derive artifact folder for ${{ matrix.python-version }}_${{ matrix.os }}_${{ matrix.python-architecture }}"

        PYTHON_VERSION="${{ matrix.python-version }}"

        if [[ "${{ matrix.os }}" = windows* ]]; then
          OS_NAME="WINDOWS"
        elif [[ "${{ matrix.os }}" = ubuntu* ]]; then
          OS_NAME="LINUX"
        elif [[ "${{ matrix.os }}" = macos* ]]; then
          OS_NAME="OSX"
        else
          OS_NAME="Unknown"
        fi

        PYTHON_ARCHITECTURE="${{ matrix.python-architecture }}"
        UPPER_ARCHITECTURE=${PYTHON_ARCHITECTURE^^}

        ARTIFACT_FOLDER_NAME="$PYTHON_VERSION_$OS_NAME_$UPPER_ARCHITECTURE"
        echo "artifact folder $ARTIFACT_FOLDER_NAME"
        echo "ARTIFACT_FOLDER_NAME=$ARTIFACT_FOLDER_NAME" >> $GITHUB_ENV
      shell: bash
    - name: Generating necessary files
      run: |
        echo "Generating necessary files for ${{ env.ARTIFACT_FOLDER_NAME }}"
        cp "./pack/utils/__init__.py" "./${{ env.ARTIFACT_FOLDER_NAME }}/azure"
        cp "./python/prodV2/*" "./${{ env.ARTIFACT_FOLDER_NAME }}"
        cp -r "./deps/*" "./${{ env.ARTIFACT_FOLDER_NAME }}"
        rm -rf "./${{ env.ARTIFACT_FOLDER_NAME }}/grpc_tools*"
        rm -rf "./${{ env.ARTIFACT_FOLDER_NAME }}/grpcio_tools*"
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_FOLDER_NAME }}.zip
        path: ${{ env.ARTIFACT_FOLDER_NAME }}
