name: 1.0.0-beta$(Date:yyyyMMdd)$(Rev:.r)

trigger:
- dev
- master

variables:
    DOTNET_VERSION: '2.2.401'

jobs:
- job: Tests
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    matrix:
      Python36:
        pythonVersion: '3.6'
      Python37:
        pythonVersion: '3.7'
    maxParallel: 1
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(pythonVersion)'
      addToPath: true 
  - task: ShellScript@2
    inputs:
      disableAutoCwd: true # Execute in current directory
      scriptPath: .ci/linux_devops_tools.sh
    displayName: 'Install Core Tools'
  - task: DotNetCoreInstaller@0
    inputs:
      packageType: 'sdk' 
      version: $(DOTNET_VERSION)
    displayName: 'Install dotnet' 
  - task: ShellScript@2
    inputs:
      disableAutoCwd: true 
      scriptPath: .ci/linux_devops_build.sh
    displayName: 'Build'
  - bash: |
        chmod +x .ci/linux_devops_unit_tests.sh
        .ci/linux_devops_unit_tests.sh
    displayName: 'Unit Tests'
  - bash: |
        chmod +x .ci/linux_devops_e2e_tests.sh
        .ci/linux_devops_e2e_tests.sh
    env:
      LINUXSTORAGECONNECTIONSTRING: $(LinuxStorageConnectionString)
      LINUXCOSMOSDBCONNECTIONSTRING: $(LinuxCosmosDBConnectionString)
      LINUXEVENTHUBCONNECTIONSTRING: $(LinuxEventHubConnectionString)
      LINUXSERVICEBUSCONNECTIONSTRING: $(LinuxServiceBusConnectionString)
    displayName: 'E2E Tests'
  
- template: pack/templates/win_env_gen.yml
  parameters:
    jobName: 'WindowsEnvGen'
    dependency: 'Tests'
    vmImage: 'vs2017-win2016'
    pythonVersion: '3.6'
    artifactName: 'Windows'

- template: pack/templates/nix_env_gen.yml
  parameters:
    jobName: 'LinuxEnvGen'
    dependency: 'Tests'
    vmImage: 'ubuntu-16.04'
    pythonVersion: '3.6'
    artifactName: 'Linux'

- template: pack/templates/nix_env_gen.yml
  parameters:
    jobName: 'MacEnvGen'
    dependency: 'Tests'
    vmImage: 'macOS-10.13'
    pythonVersion: '3.6'
    artifactName: 'Mac'

- job: PackageEnvironments
  dependsOn: ['WindowsEnvGen',
              'LinuxEnvGen',
              'MacEnvGen'
             ]
  pool:
      vmImage: 'vs2017-win2016'
  steps: 
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current' 
      downloadType: 'specific'
      downloadPath: '$(Build.SourcesDirectory)'
  - task: NuGetCommand@2
    inputs:
      command: pack
      packagesToPack: 'pack\Microsoft.Azure.Functions.PythonWorkerRunEnvironments.nuspec'
      versioningScheme: 'byEnvVar'
      versionEnvVar: BUILD_BUILDNUMBER # Replaces version in nuspec
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'PythonWorkerRunEnvironments'
      